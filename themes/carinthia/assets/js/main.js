console.log("This site was generated by Hugo.");

(function () {
  const THEME_KEY = "theme-preference";
  const themes = ["system", "light", "dark"];

  function getThemePreference() {
    const stored = localStorage.getItem(THEME_KEY);
    if (stored && themes.includes(stored)) {
      return stored;
    }
    return "system";
  }

  function setThemePreference(theme) {
    localStorage.setItem(THEME_KEY, theme);
  }

  function applyTheme(theme) {
    document.documentElement.setAttribute("data-theme", theme);

    // Apply syntax highlighting theme
    applySyntaxTheme(theme);

    // Update system icon based on system preference
    if (theme === "system") {
      const systemIcon = document.querySelector(".theme-icon-system");
      if (systemIcon) {
        const prefersDark = window.matchMedia(
          "(prefers-color-scheme: dark)",
        ).matches;
        const sunElement = systemIcon.querySelector(".system-sun");
        const moonElement = systemIcon.querySelector(".system-moon");

        if (sunElement && moonElement) {
          if (prefersDark) {
            sunElement.style.display = "none";
            moonElement.style.display = "block";
          } else {
            sunElement.style.display = "block";
            moonElement.style.display = "none";
          }
        }
      }
    }
  }

  function applySyntaxTheme(theme) {
    const lightSyntax = document.getElementById("syntax-light");
    const darkSyntax = document.getElementById("syntax-dark");

    if (!lightSyntax || !darkSyntax) return;

    let isDark = false;

    if (theme === "system") {
      isDark = window.matchMedia("(prefers-color-scheme: dark)").matches;
    } else {
      isDark = theme === "dark";
    }

    if (isDark) {
      lightSyntax.disabled = true;
      darkSyntax.disabled = false;
    } else {
      lightSyntax.disabled = false;
      darkSyntax.disabled = true;
    }
  }

  function cycleTheme() {
    const current = getThemePreference();
    const currentIndex = themes.indexOf(current);
    const nextIndex = (currentIndex + 1) % themes.length;
    const nextTheme = themes[nextIndex];

    setThemePreference(nextTheme);
    applyTheme(nextTheme);
  }

  // Apply theme on load
  document.addEventListener("DOMContentLoaded", function () {
    const theme = getThemePreference();
    applyTheme(theme);

    // Add click listener to theme switcher
    const switcher = document.getElementById("theme-switcher");
    if (switcher) {
      switcher.addEventListener("click", cycleTheme);
    }

    // Listen for system theme changes
    const mediaQuery = window.matchMedia("(prefers-color-scheme: dark)");
    mediaQuery.addEventListener("change", function () {
      const currentTheme = getThemePreference();
      if (currentTheme === "system") {
        // Re-apply to update system icon and syntax highlighting
        applyTheme("system");
      }
    });
  });

  // Also apply immediately in case DOM is already loaded
  if (document.readyState !== "loading") {
    const theme = getThemePreference();
    applyTheme(theme);
  }
})();

// Code copy functionality
(function () {
  function addCopyButtons() {
    const codeBlocks = document.querySelectorAll("pre");

    codeBlocks.forEach(function (codeBlock) {
      // Skip if already has a copy button
      if (codeBlock.querySelector(".code-copy-btn")) return;

      // Create wrapper if not exists
      let wrapper = codeBlock.parentElement;
      if (!wrapper.classList.contains("code-block-wrapper")) {
        wrapper = document.createElement("div");
        wrapper.className = "code-block-wrapper";
        codeBlock.parentNode.insertBefore(wrapper, codeBlock);
        wrapper.appendChild(codeBlock);
      }

      // Create copy button with SVG icon
      const copyBtn = document.createElement("button");
      copyBtn.className = "code-copy-btn";
      copyBtn.innerHTML = `
        <svg width="16" height="16" viewBox="0 0 24 24" fill="currentColor">
          <path d="M16 1H4c-1.1 0-2 .9-2 2v14h2V3h12V1zm3 4H8c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h11c1.1 0 2-.9 2-2V7c0-1.1-.9-2-2-2zm0 16H8V7h11v14z"/>
        </svg>
      `;
      copyBtn.setAttribute("aria-label", "Copy code to clipboard");
      copyBtn.setAttribute("title", "Copy to clipboard");

      // Add click handler
      copyBtn.addEventListener("click", function () {
        const code = codeBlock.querySelector("code") || codeBlock;
        const text = code.textContent;

        if (navigator.clipboard && window.isSecureContext) {
          navigator.clipboard
            .writeText(text)
            .then(function () {
              showCopySuccess(copyBtn);
            })
            .catch(function () {
              fallbackCopy(text, copyBtn);
            });
        } else {
          fallbackCopy(text, copyBtn);
        }
      });

      wrapper.appendChild(copyBtn);
    });
  }

  function fallbackCopy(text, button) {
    const textArea = document.createElement("textarea");
    textArea.value = text;
    textArea.style.position = "fixed";
    textArea.style.left = "-999999px";
    textArea.style.top = "-999999px";
    document.body.appendChild(textArea);
    textArea.focus();
    textArea.select();

    try {
      document.execCommand("copy");
      showCopySuccess(button);
    } catch (err) {
      console.error("Failed to copy code: ", err);
      showCopyError(button);
    }

    document.body.removeChild(textArea);
  }

  function showCopySuccess(button) {
    button.innerHTML = `
      <svg width="16" height="16" viewBox="0 0 24 24" fill="currentColor">
        <path d="M9 16.17L4.83 12l-1.42 1.41L9 19 21 7l-1.41-1.41z"/>
      </svg>
    `;
    button.classList.add("copied");
    setTimeout(function () {
      button.innerHTML = `
        <svg width="16" height="16" viewBox="0 0 24 24" fill="currentColor">
          <path d="M19 3h-4.18C14.4 1.84 13.3 1 12 1c-1.3 0-2.4.84-2.82 2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm-7 0c.55 0 1 .45 1 1s-.45 1-1 1-1-.45-1-1 .45-1 1-1zm7 16H5V5h2v3h10V5h2v14z"/>
        </svg>
      `;
      button.classList.remove("copied");
    }, 2000);
  }

  function showCopyError(button) {
    button.innerHTML = `
      <svg width="16" height="16" viewBox="0 0 24 24" fill="currentColor">
        <path d="M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm-2 15l-5-5 1.41-1.41L10 14.17l7.59-7.59L19 8l-9 9z"/>
      </svg>
    `;
    setTimeout(function () {
      button.innerHTML = `
        <svg width="16" height="16" viewBox="0 0 24 24" fill="currentColor">
          <path d="M19 3h-4.18C14.4 1.84 13.3 1 12 1c-1.3 0-2.4.84-2.82 2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm-7 0c.55 0 1 .45 1 1s-.45 1-1 1-1-.45-1-1 .45-1 1-1zm7 16H5V5h2v3h10V5h2v14z"/>
        </svg>
      `;
    }, 2000);
  }

  // Initialize copy buttons when DOM is ready
  document.addEventListener("DOMContentLoaded", addCopyButtons);

  // Also initialize immediately if DOM is already loaded
  if (document.readyState !== "loading") {
    addCopyButtons();
  }
})();
